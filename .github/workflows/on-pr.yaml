# on-pr.yml #
name: On Pull Request
on:
  pull_request:
    types: [synchronize]
    branches: [main]

jobs:
  validate_pull_request:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    name: Perform a series of checks on the committed code before it can be integrated into main.
    steps:
      # Checkout the code
      - name: Checkout
        uses: actions/checkout@v4
      # Setup GraalVM and Native Image
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          native-image-musl: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
      # Setup Clojure / Babashka environment
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@12.5
        with:
          # The value must indicate a particular version of the tool, or use 'latest'
          # to always provision the latest version
          cli: 1.11.2.1446             # Clojure CLI based on tools.deps
          bb: 1.3.189                  # Babashka
          clj-kondo: 2024.08.01        # Clj-kondo
      # Use caching for fetched dependencies to speedup the pipeline
      - name: Cache Build Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.m2/repository
          # List all files containing dependencies:
          key: ${{ runner.os }}-${{ github.event.number }}-${{ hashFiles('bb.edn') }}
          restore-keys: ${{ runner.os }}-${{ github.event.number }}-
      # Build an Uberjar
      - name: Build Uberjar
        run: cd action && clojure -T:build uber
      # Build native binary
      - name: Build Static Executable
        run: |
          native-image \
          -jar action/target/fill-gh-pr-template.jar \
          -H:+ReportExceptionStackTraces \
          --report-unsupported-elements-at-runtime \
          --initialize-at-build-time \
          --no-fallback \
          --static \
          --libc=musl \
          action/target/fill-gh-pr-template

      # # Do stuff
      # - name: pr template
      #   uses: ClockworksIO/fill-gh-pr-template-action@v1-SNAPSHOT
      #   with:
      #     draft: true
      #     draft-label: 'entwurf'
      #     pull-request: ${{ github.event.number }}
      #   env:
      #     GITHUB_ACTOR: ${{ env.GITHUB_ACTOR }}
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      